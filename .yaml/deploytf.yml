name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1
  ECR_REPO: 611837360680.dkr.ecr.eu-north-1.amazonaws.com/myapp  # Your ECR repo

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker image
        run: |
          docker build -t myapp:${{ github.sha }} .

      - name: Tag Docker image
        run: |
          docker tag myapp:${{ github.sha }} $ECR_REPO:${{ github.sha }}

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REPO:${{ github.sha }}

  deploy:
    name: Deploy to ECS via Terraform
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        run: |
          cd infra
          terraform init -input=false

      - name: Terraform apply
        env:
          IMAGE_URI: ${{ env.ECR_REPO }}:${{ github.sha }}
        run: |
          cd infra
          terraform apply -auto-approve -var "image_uri=$IMAGE_URI"
